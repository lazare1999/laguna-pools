name: CI/CD Workflow Laguna

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Spring Boot application with Gradle
      run: ./gradlew build

    - name: Run Spring Boot tests
      run: ./gradlew test

    - name: Build React application with Webpack
      working-directory: ./laguna-pools-frontend
      run: |
        npm install
        npm run build-webpack

    - name: Run React tests
      working-directory: ./laguna-pools-frontend
      run: npm test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: spring-boot-build
        path: build/libs/laguna-pools-0.0.1.jar

    - name: Upload React build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: react-build
        path: laguna-pools-frontend/dist/

    - name: Upload Docker Compose file
      uses: actions/upload-artifact@v3
      with:
        name: docker-compose
        path: docker/docker-compose.yml

    - name: Upload Dockerfiles
      uses: actions/upload-artifact@v3
      with:
        name: dockerfiles
        path: |
          docker/react-frontend/Dockerfile
          docker/spring-backend/Dockerfile

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: spring-boot-build
        path: ./build

    - name: Download React build artifacts
      uses: actions/download-artifact@v3
      with:
        name: react-build
        path: ./react-build

    - name: Download Docker Compose file
      uses: actions/download-artifact@v3
      with:
        name: docker-compose
        path: ./docker-compose.yml

    - name: Download Dockerfiles
      uses: actions/download-artifact@v3
      with:
        name: dockerfiles
        path: ./docker

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy to remote server
      run: |
        scp -i ~/.ssh/id_rsa -r ./build/*.jar ubuntu@54.224.11.73:/opt/pools/docker/spring-backend
        scp -i ~/.ssh/id_rsa -r ./react-build/* ubuntu@54.224.11.73:/opt/pools/docker/react-frontend
        scp -i ~/.ssh/id_rsa ./docker/docker-compose.yml ubuntu@54.224.11.73:/opt/pools/docker/
        scp -i ~/.ssh/id_rsa ./docker/react-frontend/Dockerfile ubuntu@54.224.11.73:/opt/pools/docker/react-frontend/Dockerfile
        scp -i ~/.ssh/id_rsa ./docker/spring-backend/Dockerfile ubuntu@54.224.11.73:/opt/pools/docker/spring-backend/Dockerfile
    - name: Restart Docker containers on remote server
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@54.224.11.73 << 'EOF'
          cd /opt/pools/docker
          docker-compose down
          docker-compose up -d
        EOF

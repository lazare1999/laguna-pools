name: CI/CD Workflow Laguna

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Spring Boot application with Gradle
        run: ./gradlew build

      - name: Run Spring Boot tests
        run: ./gradlew test

      - name: Build React application with Webpack
        working-directory: ./laguna-pools-frontend
        run: |
          npm install
          npm run build-webpack

      - name: Run React tests
        working-directory: ./laguna-pools-frontend
        run: npm test

      - name: Upload Spring Boot build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-build
          path: build/libs/laguna-pools-0.0.1.jar

      - name: Upload React build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: laguna-pools-frontend/dist/

      - name: Upload Docker Compose and Dockerfiles
        uses: actions/upload-artifact@v4
        with:
          name: docker-files
          path: |
            docker/docker-compose.yaml
            docker/react-frontend/Dockerfile
            docker/spring-backend/Dockerfile

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add remote server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.AWS_HOST }}" >> ~/.ssh/known_hosts

      - name: Download Spring Boot build artifacts
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-build
          path: build/libs/

      - name: Download React build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: laguna-pools-frontend/dist/

      - name: Download Docker Compose and Dockerfiles
        uses: actions/download-artifact@v4
        with:
          name: docker-files
          path: docker/

      - name: Upload build artifacts via SCP
        working-directory: ${{ github.workspace }}
        run: |
          scp -i ~/.ssh/id_rsa -r build/libs/laguna-pools-0.0.1.jar ubuntu@"${{ secrets.AWS_HOST }}":/opt/pools/docker/spring-backend/
          scp -i ~/.ssh/id_rsa -r laguna-pools-frontend/dist/* ubuntu@"${{ secrets.AWS_HOST }}":/opt/pools/docker/react-frontend/dist/
          scp -i ~/.ssh/id_rsa docker/docker-compose.yaml ubuntu@"${{ secrets.AWS_HOST }}":/opt/pools/docker/
          scp -i ~/.ssh/id_rsa docker/react-frontend/Dockerfile ubuntu@"${{ secrets.AWS_HOST }}":/opt/pools/docker/react-frontend/Dockerfile
          scp -i ~/.ssh/id_rsa docker/spring-backend/Dockerfile ubuntu@"${{ secrets.AWS_HOST }}":/opt/pools/docker/spring-backend/Dockerfile

      - name: Restart Docker services
        working-directory: ${{ github.workspace }}
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@54.224.11.73 "cd /opt/pools/docker && docker compose down && docker compose up --build"

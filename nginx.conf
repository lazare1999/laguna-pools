# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name laguna.lazarekvirtia.com;

    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name laguna.lazarekvirtia.com;

    ssl_certificate /etc/letsencrypt/live/laguna.lazarekvirtia.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/laguna.lazarekvirtia.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Add CORS headers globally (can be customized per location if needed)
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type";

    # Forward SSL-related headers to the backend
    proxy_set_header X-Forwarded-Proto https;

    # Location for API requests
    location /api/ {
        proxy_pass http://localhost:8080;  # Ensure this is correct based on your Docker network or local setup
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # Include CORS headers in the API location (optional if not inherited from global)
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
    }

    # Location for React frontend
    location / {
        proxy_pass http://localhost:3000;  # Ensure the correct container or local address
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }
}


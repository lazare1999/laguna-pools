plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '10.17.3'
}

def loadEnvFile() {
    def envFile = file('.env')
    if (envFile.exists()) {
        envFile.eachLine { line ->
            if (!line.trim().startsWith('#') && line.contains('=')) {
                def (key, value) = line.split('=', 2).collect { it.trim() }
                project.ext[key] = value
            }
        }
    }
}

// Load environment variables
loadEnvFile()

flyway {
    url = "jdbc:postgresql://localhost:5432/${project.hasProperty('POSTGRES_DB') ? project.POSTGRES_DB : 'default_db'}"
    user = project.hasProperty('POSTGRES_USER') ? project.POSTGRES_USER : 'default_user'
    password = project.hasProperty('POSTGRES_PASSWORD') ? project.POSTGRES_PASSWORD : 'default_password'
    schemas = ['public']  // Adjust if necessary
    locations = ['classpath:db/migration']
}

group = 'com.lagunapools'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'javax.persistence:javax.persistence-api'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

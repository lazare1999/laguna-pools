services:
  postgres:
    image: 'postgres:latest'
    container_name: laguna-pools-postgres-1
    restart: 'always'
    environment:
      POSTGRES_DB: laguna
      POSTGRES_PASSWORD: lagunaPassword
      POSTGRES_USER: lagunaUser
    networks:
      - laguna-network
    ports:
      - '5432:5432'
    volumes:
      - /data/laguna/postgres/data:/var/lib/postgresql/data
      - /data/laguna/postgres/backups:/data/laguna/postgres/backups
  postgres-backup:
    image: postgres:latest
    container_name: laguna-pools-postgres-backup
    restart: 'always'
    environment:
      PGUSER: lagunaUser
      PGPASSWORD: lagunaPassword
      PGDATABASE: laguna
    volumes:
      - /data/laguna/postgres/backups:/data/laguna/postgres/backups
      - ./backup_postgres.sh:/backup_postgres.sh
    entrypoint: [ "/bin/sh", "-c", "while true; do /backup_postgres.sh; sleep 86400; done" ]
    networks:
      - laguna-network
    depends_on:
      - postgres
  nginx:
    image: 'nginx:latest'
    container_name: laguna-pools-nginx-1
    restart: 'always'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - laguna-network
    depends_on:
      - backend
      - frontend
      - certbot
      - postgres
      - redis
      - postgres-backup
  certbot:
    restart: 'always'
    image: certbot/certbot
    container_name: laguna-pools-certbot-1
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 24h & wait $${!}; certbot renew; done;'"
    networks:
      - laguna-network
  certbot-initial:
    image: certbot/certbot
    container_name: laguna-pools-certbot-initial
    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path /var/www/certbot -d laguna.lazarekvirtia.com'"
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - laguna-network
  backend:
    container_name: laguna-pools-spring-backend-1
    restart: 'always'
    build:
      context: spring-backend
      dockerfile: Dockerfile
    image: spring-backend:latest
    depends_on:
      - postgres
    networks:
      - laguna-network
  frontend:
    restart: 'always'
    build:
      context: react-frontend
      dockerfile: Dockerfile
    container_name: laguna-pools-react-frontend-1
    depends_on:
      - backend
    networks:
      - laguna-network
  redis:
    image: 'redis:latest'
    container_name: laguna-pools-redis-1
    restart: 'always'
    networks:
      - laguna-network
    ports:
      - '6379:6379'
    volumes:
      - /data/laguna/redis/data:/data

networks:
  laguna-network:
    driver: bridge

